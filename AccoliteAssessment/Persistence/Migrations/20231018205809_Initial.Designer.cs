// <auto-generated />
using System;
using AccoliteAssessment.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccoliteAssessment.Migrations
{
    [DbContext(typeof(BankingContext))]
    [Migration("20231018205809_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccoliteAssessment.Domain.Entities.UserAccountModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserAccount", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4059a894-ce73-4af0-9c0e-fa2462f2b42a"),
                            Balance = 100.0,
                            CreatedAt = new DateTime(2023, 10, 18, 20, 58, 9, 2, DateTimeKind.Utc).AddTicks(1901),
                            Currency = "USD",
                            UserId = new Guid("29ce09a1-05bf-4b97-a69a-22352272a2c1")
                        },
                        new
                        {
                            Id = new Guid("47a4c632-6cc9-4023-ad62-19b0242a49e7"),
                            Balance = 1000.0,
                            CreatedAt = new DateTime(2023, 10, 18, 20, 58, 9, 2, DateTimeKind.Utc).AddTicks(1904),
                            Currency = "USD",
                            UserId = new Guid("d3ed77d6-42ba-4bfc-8a22-94a830f30049")
                        });
                });

            modelBuilder.Entity("AccoliteAssessment.Domain.Entities.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("User", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("29ce09a1-05bf-4b97-a69a-22352272a2c1"),
                            Age = 25,
                            Email = "test@gmail.com",
                            FirstName = "Srashti",
                            LastName = "Gupta",
                            Phone = 123456,
                            Sex = "F"
                        },
                        new
                        {
                            Id = new Guid("d3ed77d6-42ba-4bfc-8a22-94a830f30049"),
                            Age = 25,
                            Email = "test@outlook.com",
                            FirstName = "Mukesh",
                            LastName = "Shukla",
                            Phone = 123456,
                            Sex = "M"
                        });
                });

            modelBuilder.Entity("AccoliteAssessment.Domain.Entities.UserAccountModel", b =>
                {
                    b.HasOne("AccoliteAssessment.Domain.Entities.UserModel", "User")
                        .WithMany("UserAccounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserAccount_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AccoliteAssessment.Domain.Entities.UserModel", b =>
                {
                    b.Navigation("UserAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
